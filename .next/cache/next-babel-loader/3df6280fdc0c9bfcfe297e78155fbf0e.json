{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\NagatsuYuhei\\\\next_app\\\\components\\\\Authentication.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport style from '../static/Style';\nimport Router from 'next/router';\nimport firebase from 'firebase';\nimport { Button } from 'react-bootstrap';\n\nclass Authentication extends Component {\n  constructor(props) {\n    super(props);\n    this.login = this.login.bind(this);\n  } // ログイン処理\n\n\n  login() {\n    let provider = new firebase.auth.GoogleAuthProvider();\n    var self = this;\n    firebase.auth().signInWithPopup(provider).then(result => {\n      this.props.dispatch({\n        type: 'UPDATE_USER',\n        value: {\n          login: true,\n          username: result.user.displayName,\n          email: result.user.email\n        }\n      });\n      Router.push('/information');\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-div\",\n      children: [style, /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outline-info\",\n        className: \"login-btn\",\n        onClick: this.login,\n        children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nAuthentication = connect(state => state)(Authentication);\nexport default Authentication;","map":{"version":3,"sources":["C:/Users/NagatsuYuhei/next_app/components/Authentication.js"],"names":["React","Component","connect","style","Router","firebase","Button","Authentication","constructor","props","login","bind","provider","auth","GoogleAuthProvider","self","signInWithPopup","then","result","dispatch","type","value","username","user","displayName","email","push","render","state"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,SAASC,MAAT,QAAuB,iBAAvB;;AAGA,MAAMC,cAAN,SAA6BN,SAA7B,CAAuC;AAEnCO,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AAEH,GAPkC,CAS/B;;;AACAD,EAAAA,KAAK,GAAG;AACJ,QAAIE,QAAQ,GAAG,IAAIP,QAAQ,CAACQ,IAAT,CAAcC,kBAAlB,EAAf;AACA,QAAIC,IAAI,GAAG,IAAX;AAEAV,IAAAA,QAAQ,CAACQ,IAAT,GAAgBG,eAAhB,CAAgCJ,QAAhC,EACKK,IADL,CACWC,MAAD,IAAU;AACZ,WAAKT,KAAL,CAAWU,QAAX,CAAoB;AAChBC,QAAAA,IAAI,EAAC,aADW;AAEhBC,QAAAA,KAAK,EAAC;AACFX,UAAAA,KAAK,EAAC,IADJ;AAEFY,UAAAA,QAAQ,EAAEJ,MAAM,CAACK,IAAP,CAAYC,WAFpB;AAGFC,UAAAA,KAAK,EAAEP,MAAM,CAACK,IAAP,CAAYE;AAHjB;AAFU,OAApB;AAQArB,MAAAA,MAAM,CAACsB,IAAP,CAAY,cAAZ;AACH,KAXL;AAYC;;AAETC,EAAAA,MAAM,GAAI;AACN,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACKxB,KADL,eAEI,QAAC,MAAD;AAAQ,QAAA,OAAO,EAAC,cAAhB;AAA+B,QAAA,SAAS,EAAC,WAAzC;AAAqD,QAAA,OAAO,EAAG,KAAKO,KAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAnCkC;;AAsCvCH,cAAc,GAAGL,OAAO,CAAE0B,KAAD,IAASA,KAAV,CAAP,CAAwBrB,cAAxB,CAAjB;AACA,eAAeA,cAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport style from '../static/Style';\r\nimport Router from 'next/router';\r\nimport firebase from 'firebase';\r\nimport { Button } from 'react-bootstrap';\r\n\r\n\r\nclass Authentication extends Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.login = this.login.bind(this);\r\n\r\n    }\r\n\r\n        // ログイン処理\r\n        login() {\r\n            let provider = new firebase.auth.GoogleAuthProvider();\r\n            var self = this;\r\n    \r\n            firebase.auth().signInWithPopup(provider)\r\n                .then((result)=>{\r\n                    this.props.dispatch({\r\n                        type:'UPDATE_USER',\r\n                        value:{\r\n                            login:true,\r\n                            username: result.user.displayName,\r\n                            email: result.user.email\r\n                        }\r\n                    });\r\n                    Router.push('/information');\r\n                });\r\n            }\r\n\r\n    render () {\r\n        return (\r\n            <div className=\"login-div\" >\r\n                {style}\r\n                <Button variant=\"outline-info\" className=\"login-btn\" onClick={ this.login } >ログイン</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nAuthentication = connect((state)=>state)(Authentication);\r\nexport default Authentication;"]},"metadata":{},"sourceType":"module"}