{"ast":null,"code":"class Lib {\n  // 加算\n  static sum() {\n    var result, times;\n    times = arguments.split(':');\n    minute = this.toSecond(times[0], times[1]);\n    result += minute;\n    return this.toTimeFormat(result);\n  } // 時間を分に変換\n\n\n  static toSecond(hour, minute) {\n    return Number(hour) * 60 + Number(minute);\n  } // 分を時間（hh:mm）のフォーマットに変換\n\n\n  static toTimeFormat(fullSecond) {\n    var hour, minute;\n\n    var paddingZero = function (n) {\n      return n < 10 ? '0' + n : n;\n    };\n\n    hour = Math.floor(Math.abs(fullSecond) / 60);\n    minute = Math.floor(Math.abs(fullSecond) % 60);\n    minute = paddingZero(minute);\n    return hour + ':' + minute;\n  }\n\n}\n\nexport default Lib;","map":{"version":3,"sources":["C:/Users/NagatsuYuhei/next_app/static/timemath_lib.js"],"names":["Lib","sum","result","times","arguments","split","minute","toSecond","toTimeFormat","hour","Number","fullSecond","paddingZero","n","Math","floor","abs"],"mappings":"AAAA,MAAMA,GAAN,CAAU;AACF;AACD,SAAOC,GAAP,GAAa;AACR,QAAIC,MAAJ,EAAYC,KAAZ;AAEAA,IAAAA,KAAK,GAAGC,SAAS,CAACC,KAAV,CAAgB,GAAhB,CAAR;AACAC,IAAAA,MAAM,GAAG,KAAKC,QAAL,CAAcJ,KAAK,CAAC,CAAD,CAAnB,EAAwBA,KAAK,CAAC,CAAD,CAA7B,CAAT;AACAD,IAAAA,MAAM,IAAII,MAAV;AACA,WAAO,KAAKE,YAAL,CAAkBN,MAAlB,CAAP;AACH,GATC,CAUF;;;AACA,SAAOK,QAAP,CAAgBE,IAAhB,EAAsBH,MAAtB,EAA8B;AAC1B,WAAQI,MAAM,CAACD,IAAD,CAAN,GAAe,EAAhB,GAAsBC,MAAM,CAACJ,MAAD,CAAnC;AACH,GAbC,CAcF;;;AACA,SAAOE,YAAP,CAAoBG,UAApB,EAAgC;AAC5B,QAAIF,IAAJ,EAAUH,MAAV;;AACA,QAAIM,WAAW,GAAG,UAASC,CAAT,EAAY;AAC1B,aAAQA,CAAC,GAAG,EAAL,GAAY,MAAMA,CAAlB,GAAsBA,CAA7B;AACH,KAFD;;AAIAJ,IAAAA,IAAI,GAAKK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASL,UAAT,IAAuB,EAAlC,CAAT;AACAL,IAAAA,MAAM,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,GAAL,CAASL,UAAT,IAAuB,EAAlC,CAAT;AAEAL,IAAAA,MAAM,GAAGM,WAAW,CAACN,MAAD,CAApB;AAEA,WAAOG,IAAI,GAAG,GAAP,GAAaH,MAApB;AACH;;AA3BC;;AA8BV,eAAeN,GAAf","sourcesContent":["class Lib {\r\n        // 加算\r\n       static sum() {\r\n            var result, times;\r\n      \r\n            times = arguments.split(':');\r\n            minute = this.toSecond(times[0], times[1]);\r\n            result += minute;\r\n            return this.toTimeFormat(result);\r\n        }\r\n        // 時間を分に変換\r\n        static toSecond(hour, minute) {\r\n            return (Number(hour) * 60) + Number(minute);\r\n        }\r\n        // 分を時間（hh:mm）のフォーマットに変換\r\n        static toTimeFormat(fullSecond) {\r\n            var hour, minute;\r\n            var paddingZero = function(n) {\r\n                return (n < 10)  ? '0' + n : n;\r\n            };\r\n     \r\n            hour   = Math.floor(Math.abs(fullSecond) / 60);\r\n            minute = Math.floor(Math.abs(fullSecond) % 60);\r\n    \r\n            minute = paddingZero(minute);\r\n    \r\n            return hour + ':' + minute;\r\n        }\r\n}\r\n\r\nexport default Lib;"]},"metadata":{},"sourceType":"module"}