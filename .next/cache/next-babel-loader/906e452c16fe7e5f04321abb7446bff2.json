{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport thunkMiddleware from 'redux-thunk'; // ステート初期値\n\nconst initial = {\n  message: 'START',\n  data: [],\n  number: [],\n  result: 0\n}; // レデューサー\n\nfunction counterReducer(state = initial, action) {\n  switch (action.type) {\n    // 計算実行\n    case 'ENTER':\n      let data2 = state.data.slice();\n      let s = action.value;\n      data2.unshift(s);\n      let num = s.replace(/[^0-9]/g, \"\");\n      let number2 = state.number.slice();\n      number2.unshift(num);\n  }\n} // initSotre関数(redux-store.jsで必要)\n\n\nexport function initStore(state = initial) {\n  return createStore(counterReducer, state, applyMiddleware(thunkMiddleware));\n}","map":{"version":3,"sources":["C:/Users/NagatsuYuhei/next_app/store.js"],"names":["createStore","applyMiddleware","thunkMiddleware","initial","message","data","number","result","counterReducer","state","action","type","data2","slice","s","value","unshift","num","replace","number2","initStore"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,QAA6C,OAA7C;AACA,OAAOC,eAAP,MAA4B,aAA5B,C,CAEA;;AACA,MAAMC,OAAO,GAAG;AACZC,EAAAA,OAAO,EAAC,OADI;AAEZC,EAAAA,IAAI,EAAC,EAFO;AAGZC,EAAAA,MAAM,EAAC,EAHK;AAIZC,EAAAA,MAAM,EAAC;AAJK,CAAhB,C,CAOA;;AACA,SAASC,cAAT,CAAyBC,KAAK,GAAGN,OAAjC,EAA0CO,MAA1C,EAAmD;AAC/C,UAAQA,MAAM,CAACC,IAAf;AACI;AACA,SAAK,OAAL;AACI,UAAIC,KAAK,GAAGH,KAAK,CAACJ,IAAN,CAAWQ,KAAX,EAAZ;AACA,UAAIC,CAAC,GAAGJ,MAAM,CAACK,KAAf;AACAH,MAAAA,KAAK,CAACI,OAAN,CAAcF,CAAd;AAEA,UAAIG,GAAG,GAAGH,CAAC,CAACI,OAAF,CAAU,SAAV,EAAoB,EAApB,CAAV;AACA,UAAIC,OAAO,GAAGV,KAAK,CAACH,MAAN,CAAaO,KAAb,EAAd;AACAM,MAAAA,OAAO,CAACH,OAAR,CAAgBC,GAAhB;AATR;AAaH,C,CAED;;;AACA,OAAO,SAASG,SAAT,CAAmBX,KAAK,GAAGN,OAA3B,EAAoC;AACvC,SAAOH,WAAW,CAACQ,cAAD,EAAiBC,KAAjB,EAAwBR,eAAe,CAACC,eAAD,CAAvC,CAAlB;AACH","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\n// ステート初期値\r\nconst initial = {\r\n    message:'START',\r\n    data:[],\r\n    number:[],\r\n    result:0\r\n}\r\n\r\n// レデューサー\r\nfunction counterReducer (state = initial, action ) {\r\n    switch (action.type) {\r\n        // 計算実行\r\n        case 'ENTER':\r\n            let data2 = state.data.slice();\r\n            let s = action.value;\r\n            data2.unshift(s);\r\n\r\n            let num = s.replace(/[^0-9]/g,\"\");\r\n            let number2 = state.number.slice();\r\n            number2.unshift(num);\r\n            \r\n\r\n    }\r\n}\r\n\r\n// initSotre関数(redux-store.jsで必要)\r\nexport function initStore(state = initial) {\r\n    return createStore(counterReducer, state, applyMiddleware(thunkMiddleware))\r\n}"]},"metadata":{},"sourceType":"module"}