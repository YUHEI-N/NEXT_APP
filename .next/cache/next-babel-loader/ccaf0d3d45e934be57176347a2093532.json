{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\NagatsuYuhei\\\\next_app\\\\components\\\\Information.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Modal, Button } from 'react-bootstrap';\n\nclass Information extends Component {\n  render() {\n    function MyVerticallyCenteredModal(props) {\n      return /*#__PURE__*/_jsxDEV(Modal, _objectSpread(_objectSpread({}, props), {}, {\n        size: \"lg\",\n        \"aria-labelledby\": \"contained-modal-title-vcenter\",\n        centered: true,\n        children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n          closeButton: true,\n          children: /*#__PURE__*/_jsxDEV(Modal.Title, {\n            id: \"contained-modal-title-vcenter\",\n            children: \"Modal heading\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Body, {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Centered Modal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Cras mattis consectetur purus sit amet fermentum. Cras justo odio, dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac consectetur ac, vestibulum at eros.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Modal.Footer, {\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            onClick: props.onHide,\n            children: \"Close\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 15\n      }, this);\n    }\n\n    function Modal() {\n      const [modalShow, setModalShow] = React.useState(false);\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: () => setModalShow(true),\n          children: \"Launch vertically centered modal\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(MyVerticallyCenteredModal, {\n          show: modalShow,\n          onHide: () => setModalShow(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"index-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"box-title\",\n        children: \"\\u4F1A\\u793E\\u304B\\u3089\\u306E\\u9023\\u7D61\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 16\n    }, this);\n  }\n\n}\n\nexport default Information;","map":{"version":3,"sources":["C:/Users/NagatsuYuhei/next_app/components/Information.js"],"names":["React","Component","Modal","Button","Information","render","MyVerticallyCenteredModal","props","onHide","modalShow","setModalShow","useState"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA6B,iBAA7B;;AAIA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAEhCI,EAAAA,MAAM,GAAE;AACJ,aAASC,yBAAT,CAAmCC,KAAnC,EAA0C;AACtC,0BACE,QAAC,KAAD,kCACMA,KADN;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,2BAAgB,+BAHlB;AAIE,QAAA,QAAQ,MAJV;AAAA,gCAME,QAAC,KAAD,CAAO,MAAP;AAAc,UAAA,WAAW,MAAzB;AAAA,iCACE,QAAC,KAAD,CAAO,KAAP;AAAa,YAAA,EAAE,EAAC,+BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBANF,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,eAmBE,QAAC,KAAD,CAAO,MAAP;AAAA,iCACE,QAAC,MAAD;AAAQ,YAAA,OAAO,EAAEA,KAAK,CAACC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAyBH;;AAED,aAASN,KAAT,GAAiB;AACf,YAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BV,KAAK,CAACW,QAAN,CAAe,KAAf,CAAlC;AAEA,0BACE;AAAA,gCACE,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAC,SAAhB;AAA0B,UAAA,OAAO,EAAE,MAAMD,YAAY,CAAC,IAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,yBAAD;AACE,UAAA,IAAI,EAAED,SADR;AAEE,UAAA,MAAM,EAAE,MAAMC,YAAY,CAAC,KAAD;AAF5B;AAAA;AAAA;AAAA;AAAA,gBALF;AAAA,sBADF;AAYD;;AACD,wBAAO;AAAK,MAAA,KAAK,EAAC,WAAX;AAAA,8BACH;AAAM,QAAA,KAAK,EAAC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADG,eAEH,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,cAFG;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAIH;;AAnD+B;;AAsDpC,eAAeN,WAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Modal, Button} from 'react-bootstrap';\r\n\r\n\r\n\r\nclass Information extends Component {\r\n\r\n    render(){\r\n        function MyVerticallyCenteredModal(props) {\r\n            return (\r\n              <Modal\r\n                {...props}\r\n                size=\"lg\"\r\n                aria-labelledby=\"contained-modal-title-vcenter\"\r\n                centered\r\n              >\r\n                <Modal.Header closeButton>\r\n                  <Modal.Title id=\"contained-modal-title-vcenter\">\r\n                    Modal heading\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                  <h4>Centered Modal</h4>\r\n                  <p>\r\n                    Cras mattis consectetur purus sit amet fermentum. Cras justo odio,\r\n                    dapibus ac facilisis in, egestas eget quam. Morbi leo risus, porta ac\r\n                    consectetur ac, vestibulum at eros.\r\n                  </p>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                  <Button onClick={props.onHide}>Close</Button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n            );\r\n        }\r\n          \r\n        function Modal() {\r\n          const [modalShow, setModalShow] = React.useState(false);\r\n        \r\n          return (\r\n            <>\r\n              <Button variant=\"primary\" onClick={() => setModalShow(true)}>\r\n                Launch vertically centered modal\r\n              </Button>\r\n        \r\n              <MyVerticallyCenteredModal\r\n                show={modalShow}\r\n                onHide={() => setModalShow(false)}\r\n              />\r\n            </>\r\n          );\r\n        }\r\n        return(<div class=\"index-box\">\r\n            <span class=\"box-title\">会社からの連絡</span>\r\n            <Modal />\r\n        </div>);\r\n    }\r\n}\r\n\r\nexport default Information;"]},"metadata":{},"sourceType":"module"}