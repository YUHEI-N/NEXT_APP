{"ast":null,"code":"import _classCallCheck from \"C:/Users/NagatsuYuhei/next_app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/Users/NagatsuYuhei/next_app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar Lib = /*#__PURE__*/function () {\n  function Lib() {\n    _classCallCheck(this, Lib);\n  }\n\n  _createClass(Lib, null, [{\n    key: \"sum\",\n    // 加算\n    value: function sum() {\n      var result,\n          minute,\n          times,\n          i,\n          len = arguments.length;\n\n      for (i = 0; i < len; i++) {\n        times = arguments[i].split(':');\n        minute = this.toSecond(times[0], times[1]);\n\n        if (isNaN(minute)) {\n          result = 0;\n        }\n\n        if (i === 0) {\n          result = minute;\n        } else {\n          result += minute;\n        }\n      }\n\n      return this.toTimeFormat(result);\n    } // 減算\n\n  }, {\n    key: \"sub\",\n    value: function sub() {\n      var result,\n          minute,\n          times,\n          i,\n          len = arguments.length;\n\n      for (i = 0; i < len; i++) {\n        //if (arguments[0] == \"00:00\") { result=0; break; }\n        times = arguments[i].split(':');\n        minute = this.toSecond(times[0], times[1]);\n\n        if (i === 0) {\n          result = minute;\n        } else {\n          result -= minute;\n\n          if (Math.sign(result) === -1) {\n            result = 0;\n          }\n        }\n      }\n\n      return this.toTimeFormat(result);\n    } // 時間を分に変換\n\n  }, {\n    key: \"toSecond\",\n    value: function toSecond(hour, minute) {\n      return Number(hour) * 60 + Number(minute);\n    } // 分を時間（hh:mm）のフォーマットに変換\n\n  }, {\n    key: \"toTimeFormat\",\n    value: function toTimeFormat(fullSecond) {\n      var hour, minute;\n\n      var paddingZero = function paddingZero(n) {\n        return n < 10 ? '0' + n : n;\n      };\n\n      hour = Math.floor(Math.abs(fullSecond) / 60);\n      minute = Math.floor(Math.abs(fullSecond) % 60);\n      minute = paddingZero(minute);\n      return hour + ':' + minute;\n    }\n  }]);\n\n  return Lib;\n}();\n\nexport default Lib;","map":{"version":3,"sources":["C:/Users/NagatsuYuhei/next_app/static/timemath_lib.js"],"names":["Lib","result","minute","times","i","len","arguments","length","split","toSecond","isNaN","toTimeFormat","Math","sign","hour","Number","fullSecond","paddingZero","n","floor","abs"],"mappings":";;;IAAMA,G;;;;;;;AACE;0BACY;AACR,UAAIC,MAAJ;AAAA,UAAYC,MAAZ;AAAA,UAAoBC,KAApB;AAAA,UAA2BC,CAA3B;AAAA,UACAC,GAAG,GAAGC,SAAS,CAACC,MADhB;;AAGA,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,GAAhB,EAAqBD,CAAC,EAAtB,EAA0B;AAEtBD,QAAAA,KAAK,GAAGG,SAAS,CAACF,CAAD,CAAT,CAAaI,KAAb,CAAmB,GAAnB,CAAR;AACAN,QAAAA,MAAM,GAAG,KAAKO,QAAL,CAAcN,KAAK,CAAC,CAAD,CAAnB,EAAwBA,KAAK,CAAC,CAAD,CAA7B,CAAT;;AACA,YAAIO,KAAK,CAACR,MAAD,CAAT,EAAmB;AACfD,UAAAA,MAAM,GAAG,CAAT;AACH;;AACD,YAAIG,CAAC,KAAK,CAAV,EAAa;AACTH,UAAAA,MAAM,GAAGC,MAAT;AACH,SAFD,MAEO;AACHD,UAAAA,MAAM,IAAIC,MAAV;AACH;AACJ;;AACD,aAAO,KAAKS,YAAL,CAAkBV,MAAlB,CAAP;AACH,K,CACD;;;;0BACY;AACZ,UAAIA,MAAJ;AAAA,UAAYC,MAAZ;AAAA,UAAoBC,KAApB;AAAA,UAA2BC,CAA3B;AAAA,UACAC,GAAG,GAAGC,SAAS,CAACC,MADhB;;AAGA,WAAKH,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,GAAhB,EAAqBD,CAAC,EAAtB,EAA0B;AAEtB;AAEAD,QAAAA,KAAK,GAAGG,SAAS,CAACF,CAAD,CAAT,CAAaI,KAAb,CAAmB,GAAnB,CAAR;AACAN,QAAAA,MAAM,GAAG,KAAKO,QAAL,CAAcN,KAAK,CAAC,CAAD,CAAnB,EAAwBA,KAAK,CAAC,CAAD,CAA7B,CAAT;;AAEA,YAAIC,CAAC,KAAK,CAAV,EAAa;AACTH,UAAAA,MAAM,GAAGC,MAAT;AACH,SAFD,MAEO;AACHD,UAAAA,MAAM,IAAIC,MAAV;;AACA,cAAIU,IAAI,CAACC,IAAL,CAAUZ,MAAV,MAAsB,CAAC,CAA3B,EAA8B;AAC1BA,YAAAA,MAAM,GAAG,CAAT;AACH;AACJ;AACJ;;AACD,aAAO,KAAKU,YAAL,CAAkBV,MAAlB,CAAP;AACH,K,CACG;;;;6BACgBa,I,EAAMZ,M,EAAQ;AAC1B,aAAQa,MAAM,CAACD,IAAD,CAAN,GAAe,EAAhB,GAAsBC,MAAM,CAACb,MAAD,CAAnC;AACH,K,CACD;;;;iCACoBc,U,EAAY;AAC5B,UAAIF,IAAJ,EAAUZ,MAAV;;AACA,UAAIe,WAAW,GAAG,SAAdA,WAAc,CAASC,CAAT,EAAY;AAC1B,eAAQA,CAAC,GAAG,EAAL,GAAY,MAAMA,CAAlB,GAAsBA,CAA7B;AACH,OAFD;;AAIAJ,MAAAA,IAAI,GAAKF,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,GAAL,CAASJ,UAAT,IAAuB,EAAlC,CAAT;AACAd,MAAAA,MAAM,GAAGU,IAAI,CAACO,KAAL,CAAWP,IAAI,CAACQ,GAAL,CAASJ,UAAT,IAAuB,EAAlC,CAAT;AAEAd,MAAAA,MAAM,GAAGe,WAAW,CAACf,MAAD,CAApB;AAEA,aAAOY,IAAI,GAAG,GAAP,GAAaZ,MAApB;AACH;;;;;;AAGT,eAAeF,GAAf","sourcesContent":["class Lib {\r\n        // 加算\r\n       static sum() {\r\n            var result, minute, times, i,\r\n            len = arguments.length;\r\n   \r\n            for (i = 0; i < len; i++) {\r\n                \r\n                times = arguments[i].split(':');\r\n                minute = this.toSecond(times[0], times[1]);\r\n                if (isNaN(minute)) {\r\n                    result = 0;                    \r\n                }\r\n                if (i === 0) {\r\n                    result = minute;\r\n                } else {\r\n                    result += minute;\r\n                }\r\n            }\r\n            return this.toTimeFormat(result);\r\n        }\r\n        // 減算\r\n       static sub() {\r\n        var result, minute, times, i,\r\n        len = arguments.length;\r\n\r\n        for (i = 0; i < len; i++) {\r\n\r\n            //if (arguments[0] == \"00:00\") { result=0; break; }\r\n            \r\n            times = arguments[i].split(':');\r\n            minute = this.toSecond(times[0], times[1]);\r\n\r\n            if (i === 0) {\r\n                result = minute;\r\n            } else {\r\n                result -= minute;\r\n                if (Math.sign(result) === -1) {\r\n                    result = 0;\r\n                } \r\n            }\r\n        }\r\n        return this.toTimeFormat(result);\r\n    }\r\n        // 時間を分に変換\r\n        static toSecond(hour, minute) {\r\n            return (Number(hour) * 60) + Number(minute);\r\n        }\r\n        // 分を時間（hh:mm）のフォーマットに変換\r\n        static toTimeFormat(fullSecond) {\r\n            var hour, minute;\r\n            var paddingZero = function(n) {\r\n                return (n < 10)  ? '0' + n : n;\r\n            };\r\n     \r\n            hour   = Math.floor(Math.abs(fullSecond) / 60);\r\n            minute = Math.floor(Math.abs(fullSecond) % 60);\r\n    \r\n            minute = paddingZero(minute);\r\n    \r\n            return hour + ':' + minute;\r\n        }\r\n}\r\n\r\nexport default Lib;"]},"metadata":{},"sourceType":"module"}